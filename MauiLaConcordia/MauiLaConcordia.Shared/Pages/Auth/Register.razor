@page "/register"
@using MauiLaConcordia.Shared.Model
@using MauiLaConcordia.Shared.Repository

@inject IAccountsRepository accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService
@inject IDisplayMessage displayMessage


<EditForm Model="userInfo">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.Email" />
            <ValidationMessage For="@(() => userInfo.Email)" />
        </div>
    </div>

    <div class="form-group">
        <label>Nombres:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.FirstName" />
            <ValidationMessage For="@(() => userInfo.FirstName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Apellidos:</label>
        <div>
            <InputText class="form-control" @bind-Value="@userInfo.LastName" />
            <ValidationMessage For="@(() => userInfo.LastName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(() => userInfo.Password)" />
        </div>
    </div>

    <div class="form-group">
        <label>Confirmar Password:</label>
        <div>
            <InputText type="password" class="form-control" @bind-Value="@userInfo.ConfirmPassword" />
            <ValidationMessage For="@(() => userInfo.ConfirmPassword)" />
        </div>
    </div>

    <button type="button" onclick="CreateUser()" class="btn btn-primary">Register</button>

</EditForm>

@code {
    private UserEditDTO userInfo = new UserEditDTO();

    private async Task CreateUser()
    {
        try
        {
            var userToken = await accountsRepository.Register(userInfo);
            await loginService.Login(userToken);
            await displayMessage.DisplaySuccessMessage("Registro Guardado con Exito!");
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            await displayMessage.DisplayErrorMessage(ex.Message);
        }
    }
}
